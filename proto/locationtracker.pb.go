// Code generated by protoc-gen-go. DO NOT EDIT.
// source: locationtracker.proto

package locationtracker

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartTrackingRequest struct {
	TrackeeName          string   `protobuf:"bytes,1,opt,name=trackeeName,proto3" json:"trackeeName,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartTrackingRequest) Reset()         { *m = StartTrackingRequest{} }
func (m *StartTrackingRequest) String() string { return proto.CompactTextString(m) }
func (*StartTrackingRequest) ProtoMessage()    {}
func (*StartTrackingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{0}
}

func (m *StartTrackingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartTrackingRequest.Unmarshal(m, b)
}
func (m *StartTrackingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartTrackingRequest.Marshal(b, m, deterministic)
}
func (m *StartTrackingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTrackingRequest.Merge(m, src)
}
func (m *StartTrackingRequest) XXX_Size() int {
	return xxx_messageInfo_StartTrackingRequest.Size(m)
}
func (m *StartTrackingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTrackingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartTrackingRequest proto.InternalMessageInfo

func (m *StartTrackingRequest) GetTrackeeName() string {
	if m != nil {
		return m.TrackeeName
	}
	return ""
}

func (m *StartTrackingRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type StopTrackingRequest struct {
	TrackeeName          string   `protobuf:"bytes,1,opt,name=trackeeName,proto3" json:"trackeeName,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopTrackingRequest) Reset()         { *m = StopTrackingRequest{} }
func (m *StopTrackingRequest) String() string { return proto.CompactTextString(m) }
func (*StopTrackingRequest) ProtoMessage()    {}
func (*StopTrackingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{1}
}

func (m *StopTrackingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopTrackingRequest.Unmarshal(m, b)
}
func (m *StopTrackingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopTrackingRequest.Marshal(b, m, deterministic)
}
func (m *StopTrackingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopTrackingRequest.Merge(m, src)
}
func (m *StopTrackingRequest) XXX_Size() int {
	return xxx_messageInfo_StopTrackingRequest.Size(m)
}
func (m *StopTrackingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopTrackingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopTrackingRequest proto.InternalMessageInfo

func (m *StopTrackingRequest) GetTrackeeName() string {
	if m != nil {
		return m.TrackeeName
	}
	return ""
}

func (m *StopTrackingRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type StopTrackingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopTrackingResponse) Reset()         { *m = StopTrackingResponse{} }
func (m *StopTrackingResponse) String() string { return proto.CompactTextString(m) }
func (*StopTrackingResponse) ProtoMessage()    {}
func (*StopTrackingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{2}
}

func (m *StopTrackingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopTrackingResponse.Unmarshal(m, b)
}
func (m *StopTrackingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopTrackingResponse.Marshal(b, m, deterministic)
}
func (m *StopTrackingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopTrackingResponse.Merge(m, src)
}
func (m *StopTrackingResponse) XXX_Size() int {
	return xxx_messageInfo_StopTrackingResponse.Size(m)
}
func (m *StopTrackingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopTrackingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopTrackingResponse proto.InternalMessageInfo

type TrackingData struct {
	TrackeeName          string   `protobuf:"bytes,1,opt,name=trackeeName,proto3" json:"trackeeName,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float64  `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackingData) Reset()         { *m = TrackingData{} }
func (m *TrackingData) String() string { return proto.CompactTextString(m) }
func (*TrackingData) ProtoMessage()    {}
func (*TrackingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{3}
}

func (m *TrackingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackingData.Unmarshal(m, b)
}
func (m *TrackingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackingData.Marshal(b, m, deterministic)
}
func (m *TrackingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackingData.Merge(m, src)
}
func (m *TrackingData) XXX_Size() int {
	return xxx_messageInfo_TrackingData.Size(m)
}
func (m *TrackingData) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackingData.DiscardUnknown(m)
}

var xxx_messageInfo_TrackingData proto.InternalMessageInfo

func (m *TrackingData) GetTrackeeName() string {
	if m != nil {
		return m.TrackeeName
	}
	return ""
}

func (m *TrackingData) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *TrackingData) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *TrackingData) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type ReportLocationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportLocationResponse) Reset()         { *m = ReportLocationResponse{} }
func (m *ReportLocationResponse) String() string { return proto.CompactTextString(m) }
func (*ReportLocationResponse) ProtoMessage()    {}
func (*ReportLocationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{4}
}

func (m *ReportLocationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportLocationResponse.Unmarshal(m, b)
}
func (m *ReportLocationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportLocationResponse.Marshal(b, m, deterministic)
}
func (m *ReportLocationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportLocationResponse.Merge(m, src)
}
func (m *ReportLocationResponse) XXX_Size() int {
	return xxx_messageInfo_ReportLocationResponse.Size(m)
}
func (m *ReportLocationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportLocationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportLocationResponse proto.InternalMessageInfo

type RegisterRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Trackable            bool     `protobuf:"varint,2,opt,name=trackable,proto3" json:"trackable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{5}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *RegisterRequest) GetTrackable() bool {
	if m != nil {
		return m.Trackable
	}
	return false
}

type RegisterResponse struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{6}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type StartSessionRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartSessionRequest) Reset()         { *m = StartSessionRequest{} }
func (m *StartSessionRequest) String() string { return proto.CompactTextString(m) }
func (*StartSessionRequest) ProtoMessage()    {}
func (*StartSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{7}
}

func (m *StartSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartSessionRequest.Unmarshal(m, b)
}
func (m *StartSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartSessionRequest.Marshal(b, m, deterministic)
}
func (m *StartSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartSessionRequest.Merge(m, src)
}
func (m *StartSessionRequest) XXX_Size() int {
	return xxx_messageInfo_StartSessionRequest.Size(m)
}
func (m *StartSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartSessionRequest proto.InternalMessageInfo

func (m *StartSessionRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type StartSessionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartSessionResponse) Reset()         { *m = StartSessionResponse{} }
func (m *StartSessionResponse) String() string { return proto.CompactTextString(m) }
func (*StartSessionResponse) ProtoMessage()    {}
func (*StartSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{8}
}

func (m *StartSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartSessionResponse.Unmarshal(m, b)
}
func (m *StartSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartSessionResponse.Marshal(b, m, deterministic)
}
func (m *StartSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartSessionResponse.Merge(m, src)
}
func (m *StartSessionResponse) XXX_Size() int {
	return xxx_messageInfo_StartSessionResponse.Size(m)
}
func (m *StartSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartSessionResponse proto.InternalMessageInfo

type StopSessionRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopSessionRequest) Reset()         { *m = StopSessionRequest{} }
func (m *StopSessionRequest) String() string { return proto.CompactTextString(m) }
func (*StopSessionRequest) ProtoMessage()    {}
func (*StopSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{9}
}

func (m *StopSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopSessionRequest.Unmarshal(m, b)
}
func (m *StopSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopSessionRequest.Marshal(b, m, deterministic)
}
func (m *StopSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopSessionRequest.Merge(m, src)
}
func (m *StopSessionRequest) XXX_Size() int {
	return xxx_messageInfo_StopSessionRequest.Size(m)
}
func (m *StopSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopSessionRequest proto.InternalMessageInfo

func (m *StopSessionRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type StopSessionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopSessionResponse) Reset()         { *m = StopSessionResponse{} }
func (m *StopSessionResponse) String() string { return proto.CompactTextString(m) }
func (*StopSessionResponse) ProtoMessage()    {}
func (*StopSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{10}
}

func (m *StopSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopSessionResponse.Unmarshal(m, b)
}
func (m *StopSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopSessionResponse.Marshal(b, m, deterministic)
}
func (m *StopSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopSessionResponse.Merge(m, src)
}
func (m *StopSessionResponse) XXX_Size() int {
	return xxx_messageInfo_StopSessionResponse.Size(m)
}
func (m *StopSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopSessionResponse proto.InternalMessageInfo

type GetTrackablesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTrackablesRequest) Reset()         { *m = GetTrackablesRequest{} }
func (m *GetTrackablesRequest) String() string { return proto.CompactTextString(m) }
func (*GetTrackablesRequest) ProtoMessage()    {}
func (*GetTrackablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{11}
}

func (m *GetTrackablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTrackablesRequest.Unmarshal(m, b)
}
func (m *GetTrackablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTrackablesRequest.Marshal(b, m, deterministic)
}
func (m *GetTrackablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTrackablesRequest.Merge(m, src)
}
func (m *GetTrackablesRequest) XXX_Size() int {
	return xxx_messageInfo_GetTrackablesRequest.Size(m)
}
func (m *GetTrackablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTrackablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTrackablesRequest proto.InternalMessageInfo

type GetTrackablesResponse struct {
	UserName             []string `protobuf:"bytes,1,rep,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTrackablesResponse) Reset()         { *m = GetTrackablesResponse{} }
func (m *GetTrackablesResponse) String() string { return proto.CompactTextString(m) }
func (*GetTrackablesResponse) ProtoMessage()    {}
func (*GetTrackablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{12}
}

func (m *GetTrackablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTrackablesResponse.Unmarshal(m, b)
}
func (m *GetTrackablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTrackablesResponse.Marshal(b, m, deterministic)
}
func (m *GetTrackablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTrackablesResponse.Merge(m, src)
}
func (m *GetTrackablesResponse) XXX_Size() int {
	return xxx_messageInfo_GetTrackablesResponse.Size(m)
}
func (m *GetTrackablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTrackablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTrackablesResponse proto.InternalMessageInfo

func (m *GetTrackablesResponse) GetUserName() []string {
	if m != nil {
		return m.UserName
	}
	return nil
}

type SessionIdsRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionIdsRequest) Reset()         { *m = SessionIdsRequest{} }
func (m *SessionIdsRequest) String() string { return proto.CompactTextString(m) }
func (*SessionIdsRequest) ProtoMessage()    {}
func (*SessionIdsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{13}
}

func (m *SessionIdsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionIdsRequest.Unmarshal(m, b)
}
func (m *SessionIdsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionIdsRequest.Marshal(b, m, deterministic)
}
func (m *SessionIdsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionIdsRequest.Merge(m, src)
}
func (m *SessionIdsRequest) XXX_Size() int {
	return xxx_messageInfo_SessionIdsRequest.Size(m)
}
func (m *SessionIdsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionIdsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionIdsRequest proto.InternalMessageInfo

func (m *SessionIdsRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type SessionId struct {
	SessionId            int64    `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionId) Reset()         { *m = SessionId{} }
func (m *SessionId) String() string { return proto.CompactTextString(m) }
func (*SessionId) ProtoMessage()    {}
func (*SessionId) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{14}
}

func (m *SessionId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionId.Unmarshal(m, b)
}
func (m *SessionId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionId.Marshal(b, m, deterministic)
}
func (m *SessionId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionId.Merge(m, src)
}
func (m *SessionId) XXX_Size() int {
	return xxx_messageInfo_SessionId.Size(m)
}
func (m *SessionId) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionId.DiscardUnknown(m)
}

var xxx_messageInfo_SessionId proto.InternalMessageInfo

func (m *SessionId) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *SessionId) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type SessionIdsResponse struct {
	SessionId            []*SessionId `protobuf:"bytes,1,rep,name=sessionId,proto3" json:"sessionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SessionIdsResponse) Reset()         { *m = SessionIdsResponse{} }
func (m *SessionIdsResponse) String() string { return proto.CompactTextString(m) }
func (*SessionIdsResponse) ProtoMessage()    {}
func (*SessionIdsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{15}
}

func (m *SessionIdsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionIdsResponse.Unmarshal(m, b)
}
func (m *SessionIdsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionIdsResponse.Marshal(b, m, deterministic)
}
func (m *SessionIdsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionIdsResponse.Merge(m, src)
}
func (m *SessionIdsResponse) XXX_Size() int {
	return xxx_messageInfo_SessionIdsResponse.Size(m)
}
func (m *SessionIdsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionIdsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionIdsResponse proto.InternalMessageInfo

func (m *SessionIdsResponse) GetSessionId() []*SessionId {
	if m != nil {
		return m.SessionId
	}
	return nil
}

type SessionDataRequest struct {
	SessionId            int64    `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionDataRequest) Reset()         { *m = SessionDataRequest{} }
func (m *SessionDataRequest) String() string { return proto.CompactTextString(m) }
func (*SessionDataRequest) ProtoMessage()    {}
func (*SessionDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{16}
}

func (m *SessionDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionDataRequest.Unmarshal(m, b)
}
func (m *SessionDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionDataRequest.Marshal(b, m, deterministic)
}
func (m *SessionDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionDataRequest.Merge(m, src)
}
func (m *SessionDataRequest) XXX_Size() int {
	return xxx_messageInfo_SessionDataRequest.Size(m)
}
func (m *SessionDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionDataRequest proto.InternalMessageInfo

func (m *SessionDataRequest) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type SessionDataResponse struct {
	TrackingData         []*TrackingData `protobuf:"bytes,1,rep,name=trackingData,proto3" json:"trackingData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SessionDataResponse) Reset()         { *m = SessionDataResponse{} }
func (m *SessionDataResponse) String() string { return proto.CompactTextString(m) }
func (*SessionDataResponse) ProtoMessage()    {}
func (*SessionDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c19e669b665ab3c, []int{17}
}

func (m *SessionDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionDataResponse.Unmarshal(m, b)
}
func (m *SessionDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionDataResponse.Marshal(b, m, deterministic)
}
func (m *SessionDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionDataResponse.Merge(m, src)
}
func (m *SessionDataResponse) XXX_Size() int {
	return xxx_messageInfo_SessionDataResponse.Size(m)
}
func (m *SessionDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionDataResponse proto.InternalMessageInfo

func (m *SessionDataResponse) GetTrackingData() []*TrackingData {
	if m != nil {
		return m.TrackingData
	}
	return nil
}

func init() {
	proto.RegisterType((*StartTrackingRequest)(nil), "pb.potpie.locationtracker.StartTrackingRequest")
	proto.RegisterType((*StopTrackingRequest)(nil), "pb.potpie.locationtracker.StopTrackingRequest")
	proto.RegisterType((*StopTrackingResponse)(nil), "pb.potpie.locationtracker.StopTrackingResponse")
	proto.RegisterType((*TrackingData)(nil), "pb.potpie.locationtracker.TrackingData")
	proto.RegisterType((*ReportLocationResponse)(nil), "pb.potpie.locationtracker.ReportLocationResponse")
	proto.RegisterType((*RegisterRequest)(nil), "pb.potpie.locationtracker.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "pb.potpie.locationtracker.RegisterResponse")
	proto.RegisterType((*StartSessionRequest)(nil), "pb.potpie.locationtracker.StartSessionRequest")
	proto.RegisterType((*StartSessionResponse)(nil), "pb.potpie.locationtracker.StartSessionResponse")
	proto.RegisterType((*StopSessionRequest)(nil), "pb.potpie.locationtracker.StopSessionRequest")
	proto.RegisterType((*StopSessionResponse)(nil), "pb.potpie.locationtracker.StopSessionResponse")
	proto.RegisterType((*GetTrackablesRequest)(nil), "pb.potpie.locationtracker.GetTrackablesRequest")
	proto.RegisterType((*GetTrackablesResponse)(nil), "pb.potpie.locationtracker.GetTrackablesResponse")
	proto.RegisterType((*SessionIdsRequest)(nil), "pb.potpie.locationtracker.SessionIdsRequest")
	proto.RegisterType((*SessionId)(nil), "pb.potpie.locationtracker.SessionId")
	proto.RegisterType((*SessionIdsResponse)(nil), "pb.potpie.locationtracker.SessionIdsResponse")
	proto.RegisterType((*SessionDataRequest)(nil), "pb.potpie.locationtracker.SessionDataRequest")
	proto.RegisterType((*SessionDataResponse)(nil), "pb.potpie.locationtracker.SessionDataResponse")
}

func init() { proto.RegisterFile("locationtracker.proto", fileDescriptor_1c19e669b665ab3c) }

var fileDescriptor_1c19e669b665ab3c = []byte{
	// 582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x41, 0x6f, 0xda, 0x30,
	0x14, 0x26, 0xcd, 0x54, 0xc1, 0x83, 0xb6, 0xab, 0x29, 0x88, 0x45, 0x3b, 0x20, 0x6b, 0xd2, 0x50,
	0xb7, 0x06, 0x4a, 0x8f, 0xbb, 0x55, 0x93, 0xaa, 0xaa, 0xd3, 0x0e, 0x81, 0xc3, 0xb4, 0x9b, 0x29,
	0x16, 0x8a, 0x06, 0x49, 0x1a, 0x9b, 0xff, 0xd0, 0x9f, 0x3d, 0x39, 0x76, 0x1c, 0x3b, 0xed, 0x82,
	0x27, 0xf5, 0xe8, 0x97, 0xf7, 0xbe, 0xef, 0x7b, 0xf6, 0xf7, 0x1e, 0xc0, 0x60, 0x9b, 0x3e, 0x12,
	0x1e, 0xa7, 0x09, 0xcf, 0xc9, 0xe3, 0x1f, 0x9a, 0x87, 0x59, 0x9e, 0xf2, 0x14, 0x7d, 0xc8, 0x56,
	0x61, 0x96, 0xf2, 0x2c, 0xa6, 0x61, 0x2d, 0x01, 0x2f, 0xe1, 0x62, 0xc1, 0x49, 0xce, 0x97, 0xe2,
	0x1c, 0x27, 0x9b, 0x88, 0x3e, 0xed, 0x29, 0xe3, 0x68, 0x0c, 0x5d, 0x99, 0x42, 0x7f, 0x92, 0x1d,
	0x1d, 0x79, 0x63, 0x6f, 0xd2, 0x89, 0xcc, 0x10, 0x0a, 0xa0, 0xbd, 0x67, 0x34, 0x2f, 0x3e, 0x1f,
	0x15, 0x9f, 0xf5, 0x19, 0x2f, 0xa0, 0xbf, 0xe0, 0x69, 0xf6, 0xb6, 0xa0, 0x43, 0x21, 0xd5, 0x04,
	0x65, 0x59, 0x9a, 0x30, 0x8a, 0x9f, 0x3d, 0xe8, 0x95, 0xc1, 0xef, 0x84, 0x13, 0x07, 0x9a, 0x8f,
	0xd0, 0xd9, 0xa6, 0xc9, 0x26, 0xe6, 0xfb, 0xb5, 0xe4, 0xf1, 0xa2, 0x2a, 0x20, 0x44, 0x6c, 0x09,
	0x97, 0x1f, 0xfd, 0xe2, 0xa3, 0x3e, 0x8b, 0x4a, 0x1e, 0xef, 0x28, 0xe3, 0x64, 0x97, 0x8d, 0xde,
	0x8d, 0xbd, 0x89, 0x1f, 0x55, 0x01, 0x3c, 0x82, 0x61, 0x44, 0xb3, 0x34, 0xe7, 0x3f, 0xd4, 0x35,
	0x6b, 0x91, 0x0f, 0x70, 0x16, 0xd1, 0x4d, 0xcc, 0x38, 0xcd, 0xcb, 0xdb, 0x30, 0x7b, 0xf5, 0xec,
	0x5e, 0x0b, 0x1a, 0xa1, 0x97, 0xac, 0xb6, 0x52, 0x60, 0x3b, 0xaa, 0x02, 0xf8, 0x12, 0xde, 0x57,
	0x60, 0x92, 0x00, 0x0d, 0xe1, 0x58, 0x54, 0xdf, 0xaf, 0x0b, 0x2c, 0x3f, 0x52, 0x27, 0x7c, 0x2d,
	0x9e, 0x82, 0xe4, 0x7c, 0x41, 0x19, 0x2b, 0x04, 0x1d, 0x24, 0x97, 0x17, 0x6d, 0x96, 0xa8, 0x1e,
	0x66, 0x80, 0xc4, 0x03, 0xfc, 0x07, 0xd2, 0x40, 0xfa, 0xa0, 0x0e, 0x34, 0x84, 0x8b, 0x3b, 0x2a,
	0x2d, 0x27, 0xfa, 0x61, 0x0a, 0x0a, 0xdf, 0xc0, 0xa0, 0x16, 0x57, 0xcd, 0xd9, 0x1c, 0xbe, 0xc5,
	0x31, 0x85, 0x73, 0x85, 0x7f, 0xbf, 0x66, 0x2e, 0xa2, 0xee, 0xa0, 0xa3, 0x0b, 0xc4, 0x45, 0xb3,
	0xf2, 0xa0, 0x6e, 0xae, 0x0a, 0xd8, 0xaf, 0x7d, 0x54, 0x7f, 0xed, 0x5f, 0x80, 0x4c, 0x66, 0xa5,
	0xf5, 0xd6, 0x46, 0xf4, 0x27, 0xdd, 0xf9, 0xa7, 0xf0, 0x9f, 0x03, 0x18, 0x6a, 0x04, 0x83, 0x17,
	0xcf, 0x35, 0xb2, 0x30, 0x74, 0xd9, 0x54, 0xa3, 0x56, 0xbc, 0x82, 0xbe, 0x55, 0xa3, 0xe4, 0x3c,
	0x40, 0x8f, 0x1b, 0xc3, 0xa1, 0x14, 0x7d, 0x6e, 0x50, 0x64, 0xce, 0x52, 0x64, 0x15, 0xcf, 0x9f,
	0xdb, 0x70, 0x56, 0x5a, 0x7b, 0x29, 0xd3, 0x11, 0x85, 0x76, 0x69, 0x46, 0x74, 0xd9, 0x00, 0x5b,
	0xb3, 0x7f, 0xf0, 0xc5, 0x29, 0x57, 0x39, 0xa6, 0x85, 0x38, 0x9c, 0x58, 0xde, 0x40, 0xd3, 0x86,
	0xfa, 0xd7, 0xdc, 0x15, 0xcc, 0xdc, 0x0b, 0x34, 0xeb, 0x13, 0xf4, 0xcc, 0x51, 0x40, 0x61, 0xd3,
	0x4b, 0xbe, 0x1c, 0xb3, 0x60, 0xea, 0x9c, 0xaf, 0x29, 0x13, 0xe8, 0x1a, 0x33, 0x83, 0xae, 0x1a,
	0x11, 0xea, 0xd3, 0x18, 0x84, 0xae, 0xe9, 0x9a, 0x6f, 0x07, 0x27, 0xd6, 0x2f, 0x00, 0x3a, 0xa8,
	0xb9, 0xb6, 0xd6, 0x03, 0x57, 0x33, 0xe1, 0xd6, 0xcc, 0x93, 0x37, 0x5a, 0x6d, 0x71, 0x74, 0x48,
	0x70, 0x9d, 0x6c, 0xea, 0x9c, 0xaf, 0x3b, 0xcc, 0xe0, 0xd4, 0xde, 0xca, 0xc8, 0x55, 0x71, 0x70,
	0xdd, 0x68, 0xd2, 0x57, 0x37, 0x7d, 0x6b, 0xe2, 0xa1, 0xa4, 0x30, 0x6b, 0xb5, 0x1c, 0xd0, 0x57,
	0x97, 0x0d, 0xa0, 0x9d, 0x7a, 0xe5, 0x98, 0x6d, 0xd8, 0xf4, 0xb4, 0xe2, 0x2b, 0x7e, 0x03, 0x1d,
	0x20, 0x8c, 0xd5, 0xd2, 0x6c, 0x9b, 0x97, 0x5b, 0x05, 0xb7, 0x6e, 0xfb, 0xbf, 0xcf, 0xc3, 0x6f,
	0xb5, 0xd4, 0xd5, 0x71, 0xf1, 0x7f, 0xe3, 0xe6, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0xf5,
	0xfa, 0x8f, 0x88, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LocationTrackerClient is the client API for LocationTracker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LocationTrackerClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	GetTrackables(ctx context.Context, in *GetTrackablesRequest, opts ...grpc.CallOption) (*GetTrackablesResponse, error)
	StartSession(ctx context.Context, in *StartSessionRequest, opts ...grpc.CallOption) (*StartSessionResponse, error)
	StopSession(ctx context.Context, in *StopSessionRequest, opts ...grpc.CallOption) (*StopSessionResponse, error)
	StartTracking(ctx context.Context, in *StartTrackingRequest, opts ...grpc.CallOption) (LocationTracker_StartTrackingClient, error)
	StopTracking(ctx context.Context, in *StopTrackingRequest, opts ...grpc.CallOption) (*StopTrackingResponse, error)
	ReportLocation(ctx context.Context, opts ...grpc.CallOption) (LocationTracker_ReportLocationClient, error)
	GetSessionIds(ctx context.Context, in *SessionIdsRequest, opts ...grpc.CallOption) (*SessionIdsResponse, error)
	GetSessionData(ctx context.Context, in *SessionDataRequest, opts ...grpc.CallOption) (*SessionDataResponse, error)
}

type locationTrackerClient struct {
	cc *grpc.ClientConn
}

func NewLocationTrackerClient(cc *grpc.ClientConn) LocationTrackerClient {
	return &locationTrackerClient{cc}
}

func (c *locationTrackerClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/pb.potpie.locationtracker.LocationTracker/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTrackerClient) GetTrackables(ctx context.Context, in *GetTrackablesRequest, opts ...grpc.CallOption) (*GetTrackablesResponse, error) {
	out := new(GetTrackablesResponse)
	err := c.cc.Invoke(ctx, "/pb.potpie.locationtracker.LocationTracker/GetTrackables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTrackerClient) StartSession(ctx context.Context, in *StartSessionRequest, opts ...grpc.CallOption) (*StartSessionResponse, error) {
	out := new(StartSessionResponse)
	err := c.cc.Invoke(ctx, "/pb.potpie.locationtracker.LocationTracker/StartSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTrackerClient) StopSession(ctx context.Context, in *StopSessionRequest, opts ...grpc.CallOption) (*StopSessionResponse, error) {
	out := new(StopSessionResponse)
	err := c.cc.Invoke(ctx, "/pb.potpie.locationtracker.LocationTracker/StopSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTrackerClient) StartTracking(ctx context.Context, in *StartTrackingRequest, opts ...grpc.CallOption) (LocationTracker_StartTrackingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LocationTracker_serviceDesc.Streams[0], "/pb.potpie.locationtracker.LocationTracker/StartTracking", opts...)
	if err != nil {
		return nil, err
	}
	x := &locationTrackerStartTrackingClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LocationTracker_StartTrackingClient interface {
	Recv() (*TrackingData, error)
	grpc.ClientStream
}

type locationTrackerStartTrackingClient struct {
	grpc.ClientStream
}

func (x *locationTrackerStartTrackingClient) Recv() (*TrackingData, error) {
	m := new(TrackingData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *locationTrackerClient) StopTracking(ctx context.Context, in *StopTrackingRequest, opts ...grpc.CallOption) (*StopTrackingResponse, error) {
	out := new(StopTrackingResponse)
	err := c.cc.Invoke(ctx, "/pb.potpie.locationtracker.LocationTracker/StopTracking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTrackerClient) ReportLocation(ctx context.Context, opts ...grpc.CallOption) (LocationTracker_ReportLocationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LocationTracker_serviceDesc.Streams[1], "/pb.potpie.locationtracker.LocationTracker/ReportLocation", opts...)
	if err != nil {
		return nil, err
	}
	x := &locationTrackerReportLocationClient{stream}
	return x, nil
}

type LocationTracker_ReportLocationClient interface {
	Send(*TrackingData) error
	CloseAndRecv() (*ReportLocationResponse, error)
	grpc.ClientStream
}

type locationTrackerReportLocationClient struct {
	grpc.ClientStream
}

func (x *locationTrackerReportLocationClient) Send(m *TrackingData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *locationTrackerReportLocationClient) CloseAndRecv() (*ReportLocationResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ReportLocationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *locationTrackerClient) GetSessionIds(ctx context.Context, in *SessionIdsRequest, opts ...grpc.CallOption) (*SessionIdsResponse, error) {
	out := new(SessionIdsResponse)
	err := c.cc.Invoke(ctx, "/pb.potpie.locationtracker.LocationTracker/GetSessionIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationTrackerClient) GetSessionData(ctx context.Context, in *SessionDataRequest, opts ...grpc.CallOption) (*SessionDataResponse, error) {
	out := new(SessionDataResponse)
	err := c.cc.Invoke(ctx, "/pb.potpie.locationtracker.LocationTracker/GetSessionData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LocationTrackerServer is the server API for LocationTracker service.
type LocationTrackerServer interface {
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	GetTrackables(context.Context, *GetTrackablesRequest) (*GetTrackablesResponse, error)
	StartSession(context.Context, *StartSessionRequest) (*StartSessionResponse, error)
	StopSession(context.Context, *StopSessionRequest) (*StopSessionResponse, error)
	StartTracking(*StartTrackingRequest, LocationTracker_StartTrackingServer) error
	StopTracking(context.Context, *StopTrackingRequest) (*StopTrackingResponse, error)
	ReportLocation(LocationTracker_ReportLocationServer) error
	GetSessionIds(context.Context, *SessionIdsRequest) (*SessionIdsResponse, error)
	GetSessionData(context.Context, *SessionDataRequest) (*SessionDataResponse, error)
}

func RegisterLocationTrackerServer(s *grpc.Server, srv LocationTrackerServer) {
	s.RegisterService(&_LocationTracker_serviceDesc, srv)
}

func _LocationTracker_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTrackerServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.potpie.locationtracker.LocationTracker/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTrackerServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracker_GetTrackables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrackablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTrackerServer).GetTrackables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.potpie.locationtracker.LocationTracker/GetTrackables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTrackerServer).GetTrackables(ctx, req.(*GetTrackablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracker_StartSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTrackerServer).StartSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.potpie.locationtracker.LocationTracker/StartSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTrackerServer).StartSession(ctx, req.(*StartSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracker_StopSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTrackerServer).StopSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.potpie.locationtracker.LocationTracker/StopSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTrackerServer).StopSession(ctx, req.(*StopSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracker_StartTracking_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StartTrackingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LocationTrackerServer).StartTracking(m, &locationTrackerStartTrackingServer{stream})
}

type LocationTracker_StartTrackingServer interface {
	Send(*TrackingData) error
	grpc.ServerStream
}

type locationTrackerStartTrackingServer struct {
	grpc.ServerStream
}

func (x *locationTrackerStartTrackingServer) Send(m *TrackingData) error {
	return x.ServerStream.SendMsg(m)
}

func _LocationTracker_StopTracking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopTrackingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTrackerServer).StopTracking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.potpie.locationtracker.LocationTracker/StopTracking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTrackerServer).StopTracking(ctx, req.(*StopTrackingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracker_ReportLocation_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LocationTrackerServer).ReportLocation(&locationTrackerReportLocationServer{stream})
}

type LocationTracker_ReportLocationServer interface {
	SendAndClose(*ReportLocationResponse) error
	Recv() (*TrackingData, error)
	grpc.ServerStream
}

type locationTrackerReportLocationServer struct {
	grpc.ServerStream
}

func (x *locationTrackerReportLocationServer) SendAndClose(m *ReportLocationResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *locationTrackerReportLocationServer) Recv() (*TrackingData, error) {
	m := new(TrackingData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _LocationTracker_GetSessionIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionIdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTrackerServer).GetSessionIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.potpie.locationtracker.LocationTracker/GetSessionIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTrackerServer).GetSessionIds(ctx, req.(*SessionIdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationTracker_GetSessionData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationTrackerServer).GetSessionData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.potpie.locationtracker.LocationTracker/GetSessionData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationTrackerServer).GetSessionData(ctx, req.(*SessionDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocationTracker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.potpie.locationtracker.LocationTracker",
	HandlerType: (*LocationTrackerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _LocationTracker_Register_Handler,
		},
		{
			MethodName: "GetTrackables",
			Handler:    _LocationTracker_GetTrackables_Handler,
		},
		{
			MethodName: "StartSession",
			Handler:    _LocationTracker_StartSession_Handler,
		},
		{
			MethodName: "StopSession",
			Handler:    _LocationTracker_StopSession_Handler,
		},
		{
			MethodName: "StopTracking",
			Handler:    _LocationTracker_StopTracking_Handler,
		},
		{
			MethodName: "GetSessionIds",
			Handler:    _LocationTracker_GetSessionIds_Handler,
		},
		{
			MethodName: "GetSessionData",
			Handler:    _LocationTracker_GetSessionData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StartTracking",
			Handler:       _LocationTracker_StartTracking_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ReportLocation",
			Handler:       _LocationTracker_ReportLocation_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "locationtracker.proto",
}
